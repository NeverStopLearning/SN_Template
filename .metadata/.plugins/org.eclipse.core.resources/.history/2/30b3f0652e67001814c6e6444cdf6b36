import React, { Component } from 'react';

//implementing redux
import {connect} from 'react-redux';
import PropTypes from 'prop-types';

//actions
import { getCurrentProfile } from '../../actions/profileActions.js';

//components
import Spinner from '../common/Spinner.js';


class Dashboard extends Component {
	
	componentDidMount(){
		this.props.getCurrentProfile();
	}
	
	render(){
		const { user } = this.props.auth;
		const { profile, loading } = this.props.profile;
		
		let dashboardContent;
		
		if(profile === null || loading){
			dashboardContent = <h4>Loading...</h4>;
		}
		else{
			dashboardContent = <h1>Else</h1>;
		}
		
		return(
				<div className = "dashboard">
					<div className = "container">
						<div className = "row">
							<div className = "col-md-12">
								<h1 className = "display-4">Dashboard</h1>
								{dashboardContent}
							</div>
						</div>
					</div>
				</div>
		)
	}
}


Dashboard.propTypes = {
	getCurrentProfile: PropTypes.func.isRequired,
	auth: PropTypes.object.isRequired,
	profile: PropTypes.object.isRequired
};

// y '=> ({ why this in ()? });'
const mapStateToProps = (state) => ({
	auth: state.auth,
	profile: state.profile
});

export default connect(mapStateToProps, {getCurrentProfile})(Dashboard);